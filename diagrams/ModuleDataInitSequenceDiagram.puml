@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Database DATABASE_COLOR_T1
participant ":DatabaseManager" as DatabaseManager DATABASE_COLOR
participant "jsonData:JsonSerializableModuleData" as JsonSerializableModuleData DATABASE_COLOR
participant ":JsonAdaptedDbModule" as JsonAdaptedDbModule DATABASE_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Module" as Module MODEL_COLOR
participant "data:ModuleData" as ModuleData MODEL_COLOR
end box

box Commons LOGIC_COLOR_T1
participant "<<class>>\nJsonutil" as JsonUtil LOGIC_COLOR_T2
end box

[-> DatabaseManager : readDatabase()
activate DatabaseManager

DatabaseManager -> JsonUtil : readJsonResource(filePath)
activate JsonUtil

create JsonSerializableModuleData
JsonUtil -> JsonSerializableModuleData
activate JsonSerializableModuleData

loop for each module

create JsonAdaptedDbModule
JsonSerializableModuleData -> JsonAdaptedDbModule
activate JsonAdaptedDbModule

JsonAdaptedDbModule --> JsonSerializableModuleData
deactivate JsonAdaptedDbModule

end

JsonSerializableModuleData --> JsonUtil : jsonData
deactivate JsonSerializableModuleData

JsonUtil --> DatabaseManager: jsonData
deactivate JsonUtil

DatabaseManager -> JsonSerializableModuleData : toModelType()
activate JsonSerializableModuleData

create ModuleData
JsonSerializableModuleData -> ModuleData
activate ModuleData

ModuleData --> JsonSerializableModuleData : data
deactivate ModuleData

loop for each module

JsonSerializableModuleData -> JsonAdaptedDbModule : toModelType()
activate JsonAdaptedDbModule

create Module
JsonAdaptedDbModule -> Module
activate Module

Module --> JsonAdaptedDbModule : m
deactivate Module

JsonAdaptedDbModule --> JsonSerializableModuleData : m
deactivate JsonAdaptedDbModule

JsonSerializableModuleData -> ModuleData : addModule(m)
activate ModuleData

ModuleData --> JsonSerializableModuleData
deactivate ModuleData

end

JsonSerializableModuleData --> DatabaseManager : data
deactivate JsonSerializableModuleData

[<-- DatabaseManager : data
deactivate DatabaseManager

@enduml
